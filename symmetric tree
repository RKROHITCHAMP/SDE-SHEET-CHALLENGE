/*****************************************************

    Following is the Binary Tree node structure:
    
    class BinaryTreeNode {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
        
        ~BinaryTreeNode() {
            if(left) 
                delete left;
            if(right) 
                delete right;
        }
    };

******************************************************/

    bool mirror(BinaryTreeNode<int>* p, BinaryTreeNode<int>* q)
    {
        if(!p && !q)
            return true;
        
        if(!p || !q)
            return false;
        
        return (p->data == q->data) && mirror(p->left, q->right) && mirror(p->right, q->left);

    }

bool isSymmetric(BinaryTreeNode<int>* root)
{
         if(!root)
           return true;
        
        return mirror(root->left,root->right);
}
